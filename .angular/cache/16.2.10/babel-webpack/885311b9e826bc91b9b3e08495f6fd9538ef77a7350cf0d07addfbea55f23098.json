{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/movies-l.service\";\nexport class ReviewComponent {\n  constructor(active, movieList) {\n    this.active = active;\n  }\n  ngOnInit() {\n    this.active.params.subscribe(data => {\n      this.movieReviewData = data.results.slice(0, 3);\n    });\n  }\n  static #_ = this.ɵfac = function ReviewComponent_Factory(t) {\n    return new (t || ReviewComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.MoviesLService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReviewComponent,\n    selectors: [[\"app-review\"]],\n    decls: 38,\n    vars: 0,\n    consts: [[1, \"review-box\"], [\"id\", \"accordionExample\", 1, \"accordion\"], [1, \"accordion-item\"], [1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseOne\", \"aria-expanded\", \"true\", \"aria-controls\", \"collapseOne\", 1, \"accordion-button\"], [\"id\", \"collapseOne\", \"data-bs-parent\", \"#accordionExample\", 1, \"accordion-collapse\", \"collapse\", \"show\"], [1, \"accordion-body\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseTwo\", \"aria-expanded\", \"false\", \"aria-controls\", \"collapseTwo\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"collapseTwo\", \"data-bs-parent\", \"#accordionExample\", 1, \"accordion-collapse\", \"collapse\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseThree\", \"aria-expanded\", \"false\", \"aria-controls\", \"collapseThree\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"collapseThree\", \"data-bs-parent\", \"#accordionExample\", 1, \"accordion-collapse\", \"collapse\"]],\n    template: function ReviewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3)(4, \"button\", 4);\n        i0.ɵɵtext(5, \" Accordion Item #1 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"strong\");\n        i0.ɵɵtext(9, \"This is the first item's accordion body.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(10, \" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n        i0.ɵɵelementStart(11, \"code\");\n        i0.ɵɵtext(12, \".accordion-body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13, \", though the transition does limit overflow. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 2)(15, \"h2\", 3)(16, \"button\", 7);\n        i0.ɵɵtext(17, \" Accordion Item #2 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 8)(19, \"div\", 6)(20, \"strong\");\n        i0.ɵɵtext(21, \"This is the second item's accordion body.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(22, \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n        i0.ɵɵelementStart(23, \"code\");\n        i0.ɵɵtext(24, \".accordion-body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(25, \", though the transition does limit overflow. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 2)(27, \"h2\", 3)(28, \"button\", 9);\n        i0.ɵɵtext(29, \" Accordion Item #3 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 10)(31, \"div\", 6)(32, \"strong\");\n        i0.ɵɵtext(33, \"This is the third item's accordion body.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(34, \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n        i0.ɵɵelementStart(35, \"code\");\n        i0.ɵɵtext(36, \".accordion-body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(37, \", though the transition does limit overflow. \");\n        i0.ɵɵelementEnd()()()()();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["ReviewComponent","constructor","active","movieList","ngOnInit","params","subscribe","data","movieReviewData","results","slice","_","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","MoviesLService","_2","selectors","decls","vars","consts","template","ReviewComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\Angular_Practice\\movie2\\src\\app\\review\\review.component.ts","D:\\Angular_Practice\\movie2\\src\\app\\review\\review.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MoviesLService } from '../services/movies-l.service';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.css']\n})\nexport class ReviewComponent implements OnInit{\n// movie review data\nmovieReviewData:any;  \n\nconstructor(private active:ActivatedRoute, movieList:MoviesLService){}\n\n\n  ngOnInit(): void {\n    this.active.params.subscribe((data:any)=>{\n      this.movieReviewData=data.results.slice(0,3)\n    })\n  }\n\n}\n","<div class=\"review-box\">\n  <div class=\"accordion\" id=\"accordionExample\">\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\">\n        <button\n          class=\"accordion-button\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#collapseOne\"\n          aria-expanded=\"true\"\n          aria-controls=\"collapseOne\"\n        >\n          Accordion Item #1\n        </button>\n      </h2>\n      <div\n        id=\"collapseOne\"\n        class=\"accordion-collapse collapse show\"\n        data-bs-parent=\"#accordionExample\"\n      >\n        <div class=\"accordion-body\">\n          <strong>This is the first item's accordion body.</strong> It is shown\n          by default, until the collapse plugin adds the appropriate classes\n          that we use to style each element. These classes control the overall\n          appearance, as well as the showing and hiding via CSS transitions. You\n          can modify any of this with custom CSS or overriding our default\n          variables. It's also worth noting that just about any HTML can go\n          within the <code>.accordion-body</code>, though the transition does\n          limit overflow.\n        </div>\n      </div>\n    </div>\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\">\n        <button\n          class=\"accordion-button collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#collapseTwo\"\n          aria-expanded=\"false\"\n          aria-controls=\"collapseTwo\"\n        >\n          Accordion Item #2\n        </button>\n      </h2>\n      <div\n        id=\"collapseTwo\"\n        class=\"accordion-collapse collapse\"\n        data-bs-parent=\"#accordionExample\"\n      >\n        <div class=\"accordion-body\">\n          <strong>This is the second item's accordion body.</strong> It is\n          hidden by default, until the collapse plugin adds the appropriate\n          classes that we use to style each element. These classes control the\n          overall appearance, as well as the showing and hiding via CSS\n          transitions. You can modify any of this with custom CSS or overriding\n          our default variables. It's also worth noting that just about any HTML\n          can go within the <code>.accordion-body</code>, though the transition\n          does limit overflow.\n        </div>\n      </div>\n    </div>\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\">\n        <button\n          class=\"accordion-button collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#collapseThree\"\n          aria-expanded=\"false\"\n          aria-controls=\"collapseThree\"\n        >\n          Accordion Item #3\n        </button>\n      </h2>\n      <div\n        id=\"collapseThree\"\n        class=\"accordion-collapse collapse\"\n        data-bs-parent=\"#accordionExample\"\n      >\n        <div class=\"accordion-body\">\n          <strong>This is the third item's accordion body.</strong> It is hidden\n          by default, until the collapse plugin adds the appropriate classes\n          that we use to style each element. These classes control the overall\n          appearance, as well as the showing and hiding via CSS transitions. You\n          can modify any of this with custom CSS or overriding our default\n          variables. It's also worth noting that just about any HTML can go\n          within the <code>.accordion-body</code>, though the transition does\n          limit overflow.\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"],"mappings":";;;AASA,OAAM,MAAOA,eAAe;EAI5BC,YAAoBC,MAAqB,EAAEC,SAAwB;IAA/C,KAAAD,MAAM,GAANA,MAAM;EAA2C;EAGnEE,QAAQA,CAAA;IACN,IAAI,CAACF,MAAM,CAACG,MAAM,CAACC,SAAS,CAAEC,IAAQ,IAAG;MACvC,IAAI,CAACC,eAAe,GAACD,IAAI,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC;IAC9C,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAXUX,eAAe,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAflB,eAAe;IAAAmB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT5Bb,EAAA,CAAAe,cAAA,aAAwB;QAYdf,EAAA,CAAAgB,MAAA,0BACF;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAEXjB,EAAA,CAAAe,cAAA,aAIC;QAEWf,EAAA,CAAAgB,MAAA,+CAAwC;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAACjB,EAAA,CAAAgB,MAAA,kXAM/C;QAAAhB,EAAA,CAAAe,cAAA,YAAM;QAAAf,EAAA,CAAAgB,MAAA,uBAAe;QAAAhB,EAAA,CAAAiB,YAAA,EAAO;QAAAjB,EAAA,CAAAgB,MAAA,qDAEzC;QAAAhB,EAAA,CAAAiB,YAAA,EAAM;QAGVjB,EAAA,CAAAe,cAAA,cAA4B;QAUtBf,EAAA,CAAAgB,MAAA,2BACF;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAEXjB,EAAA,CAAAe,cAAA,cAIC;QAEWf,EAAA,CAAAgB,MAAA,iDAAyC;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAACjB,EAAA,CAAAgB,MAAA,mXAMzC;QAAAhB,EAAA,CAAAe,cAAA,YAAM;QAAAf,EAAA,CAAAgB,MAAA,uBAAe;QAAAhB,EAAA,CAAAiB,YAAA,EAAO;QAAAjB,EAAA,CAAAgB,MAAA,qDAEhD;QAAAhB,EAAA,CAAAiB,YAAA,EAAM;QAGVjB,EAAA,CAAAe,cAAA,cAA4B;QAUtBf,EAAA,CAAAgB,MAAA,2BACF;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAEXjB,EAAA,CAAAe,cAAA,eAIC;QAEWf,EAAA,CAAAgB,MAAA,gDAAwC;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAACjB,EAAA,CAAAgB,MAAA,mXAM/C;QAAAhB,EAAA,CAAAe,cAAA,YAAM;QAAAf,EAAA,CAAAgB,MAAA,uBAAe;QAAAhB,EAAA,CAAAiB,YAAA,EAAO;QAAAjB,EAAA,CAAAgB,MAAA,qDAEzC;QAAAhB,EAAA,CAAAiB,YAAA,EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}